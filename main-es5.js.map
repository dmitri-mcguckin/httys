{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/attacks/attacks.component.ts","webpack:///src/app/components/attacks/attacks.component.html","webpack:///src/app/components/contracts/contracts.component.ts","webpack:///src/app/components/contracts/contracts.component.html","webpack:///src/app/components/info-hotbar/info-hotbar.component.ts","webpack:///src/app/components/info-hotbar/info-hotbar.component.html","webpack:///src/app/components/skill-tree/skill-tree.component.ts","webpack:///src/app/components/skill-tree/skill-tree.component.html","webpack:///src/app/services/data-store.service.ts","webpack:///src/assets/attacks.ts","webpack:///src/assets/tooltips.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","short_title","long_title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","AttackPane","data_store","tick_time","current_attack","show_attacks","attack_active","attack_options","Object","attack_select_form","attack","required","event_timer","setInterval","store_bits","fetch_bits","attack_percentage","selection","get","value","console","log","name","description","genearte_random_tooltip","percentage","start_time","Date","end_time","get_final_time","current","getTime","completed","Math","floor","store_attack_percentage","fetch_percentage","reward","random","time","index","toggle_attacks","ContractsComponent","show_contracts","contract_form","accepted","cycle","toggle_contracts","InfoHotbarComponent","total_money","fetch_money","total_bits","total_detection","fetch_detection","total_detection_max","fetch_detection_max","total_detection_percentage","toFixed","grind_bits","EffectType","SkillTreeComponent","modalService","canPurchase","showTree","infectionMod","addMod","multMod","expMod","wealthMod","stealthMod","pathMods","allSkills","desc","cost","purchased","effect","add","modifier","tree","lump","mult","exp","points_tick_time","fetch_skills","JSON","parse","fetch_mods","skillPoints","fetch_points","bits","money","store_money","detection","store_detection","points_event_timer","store_points","setTooltips","setSkillColors","key","skill","div","document","getElementById","style","backgroundColor","skills","getElementsByClassName","i","length","setAttribute","store_mods","stringify","querySelector","innerHTML","innerText","toString","skillId","currSkill","search","dismissAll","setModifiers","setLumpSum","store_skills","refundedPoints","resetMods","content","event","selectedSkill","target","open","ariaLabelledBy","color","toggleDisplay","resetSkills","DataStoreService","cookie_service","set","global_bits","parseInt","global_money","global_detection","detection_max","global_detection_max","skillsJSON","modsJSON","global_percengae","points","global_points","providedIn","attacks","tooltips","environment","production","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\n\nexport class AppComponent {\n  short_title = 'httys';\n  long_title = 'How To Train Your Skynet';\n}\n","<info-hotbar></info-hotbar>\n<skill-tree></skill-tree>\n<contracts-pane></contracts-pane>\n<attack-pane></attack-pane>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { SkillTreeComponent } from 'src/app/components/skill-tree/skill-tree.component';\nimport { InfoHotbarComponent } from 'src/app/components/info-hotbar/info-hotbar.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AttackPane } from './components/attacks/attacks.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ContractsComponent } from './components/contracts/contracts.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SkillTreeComponent,\n    InfoHotbarComponent,\n    AttackPane,\n    ContractsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [\n    AppComponent,\n    SkillTreeComponent,\n    InfoHotbarComponent,\n  ],\n})\n\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { attacks } from 'src/assets/attacks';\nimport { tooltips } from 'src/assets/tooltips';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DataStoreService } from 'src/app/services/data-store.service';\n\n// number = 0;\n// let currency:currencies = new currencies(0, null, 0);\n// let attacking:attacks = new attack(null, null, null, null, null);\n//\n// mainLoop();\n//\n//\n// function mainLoop(){\n//   currency.bits = updateGUI(currency, attacking);    //call updateGUI function.\n// }\n//\n// function updateGUI(currency: currencies, attacking: attacks): number {\n//   document.getElementById(\"currency\").textContent = \"You have \" + currency.bits + \" bits\";\n//   currency.bits = currency.generate_currency(currency.bits);\n//   //attacking.attack_name = attacking.choose_attack(currency, attacking);\n//   //attacking.remaining = attacking.check_time(currency, attacking);\n//   attacking.choose_attack(currency, attacking);\n//   if (attacking.completed == 0){\n//     document.getElementById(\"Attack Percentage\").textContent = \"Attack Percentage:  \";\n//   }else if (attacking.attack_name == \"Choose an Attack\"){\n//     document.getElementById(\"Attack Percentage\").textContent = \"Attack Percentage:  \";\n//   }else{\n//     //attacking.check_time(currency, attacking);\n//     document.getElementById(\"Attack Percentage\").textContent = \"Attack Percentage: \" + Math.floor((attacking.completed/attacking.total)*100) + \"%\";\n//     document.getElementById(\"Attack Completed\").textContent = \"Attack Completed: \" + attacking.completed;\n//     document.getElementById(\"Attack Total\").textContent = \"Attack Total: \" + attacking.total;\n//     document.getElementById(\"Attack Name\").textContent = \"Attack Name: \" + attacking.attack_name;\n//     document.getElementById(\"Malware Info\").textContent = \"Malware Info: \" + attacking.attack_info;\n//   }\n//\n//   return currency.bits;\n// }\n//\n// setInterval(mainLoop, 300) //update every 200 miliseconds.\n// updateGUI(currency, attacking);    //call updateGUI function.\n\ninterface Attack {\n  name: string;\n  description: string;\n  percentage: number;\n  start_time: Date;\n  end_time: number;\n}\n\n@Component({\n  selector: 'attack-pane',\n  templateUrl: './attacks.component.html',\n  styleUrls: ['./attacks.component.sass'],\n})\nexport class AttackPane implements OnInit {\n  event_timer: any;\n  tick_time: number = 100;\n\n  attack_select_form: FormGroup;\n\n  attack_options: Array<string>;\n  current_attack: Attack = null;\n  show_attacks: boolean = false;\n  attack_active: boolean = false;\n\n  constructor(private data_store: DataStoreService) {\n    this.attack_options = Object.keys(attacks);\n\n    this.attack_select_form = new FormGroup({\n      attack: new FormControl(0, Validators.required),\n    });\n\n    this.event_timer = setInterval(() => {\n      data_store.store_bits(data_store.fetch_bits() + 1);\n      //data_store.store_attack_percentage(data_store.fetch_percentage();\n      if (this.current_attack != null) {\n        this.attack_percentage();\n      }\n    }, this.tick_time);\n  }\n\n  toggle_attacks(): void {\n    this.show_attacks = !this.show_attacks;\n  }\n\n  initiate_attack(): void {\n    const selection = this.attack_select_form.get('attack').value;\n    console.log(`Starting ${selection}...`);\n    this.current_attack = {\n      name: selection,\n      description: this.genearte_random_tooltip(),\n      percentage: 0,\n      start_time: new Date(),\n      end_time: this.get_final_time(),\n    };\n\n    this.attack_active = true;\n  }\n\n  attack_percentage(): void {\n    let current = new Date().getTime(); //get current time in seconds.\n\n    if (this.current_attack.percentage < 100) {\n      let completed = current - this.current_attack.start_time.getTime(); //get time since start time.\n      this.current_attack.percentage = Math.floor(\n        completed / 1000 / this.current_attack.end_time\n      ); //compare start time against end time.\n      this.data_store.store_attack_percentage(\n        this.data_store.fetch_percentage()\n      );\n\n      if (this.current_attack.percentage >= 100) {\n        this.data_store.store_bits(\n          this.data_store.fetch_bits() + this.reward()\n        );\n        this.current_attack.percentage == 0;\n        this.current_attack == null;\n        this.attack_active = false;\n      }\n    }\n  }\n\n  cycle(): void {}\n\n  get_final_time(): number {\n    let random = Math.floor(Math.random() * 500) + 1000;\n    let time = new Date(random); //conert milliseconds to seconds.\n    return time.getTime() / 1000; //convert milliseconds to seconds.\n  }\n\n  /**Check if contract is up. Return duration so we can set percetage bar in main page.*/\n  // check_time(currency: currencies, attacking: attacks): number {\n  //     let current_time = new Date().getTime();\n  //     attacking.completed = (current_time - attacking.start_time) * 1000;   //gives us time in milliseconds.\n  //\n  //     if(attacking.completed > attacking.total){   //we are done attacking. reset everything.\n  //         currency.bits += this.reward();\n  //         attacking.attack_name = null; //stop attacks from continuing infinetly.\n  //         attacking.completed = 0;\n  //         return;\n  //     }\n  //     else{\n  //         return attacking.completed;   //return the remaining amount of time.\n  //     }\n  // }\n\n  reward() {\n    let reward = Math.floor(Math.random() * 500) + 1; //genearte a random number between 1 and 100.\n    return reward;\n  }\n\n  /**Give random attack info per attack. */\n  genearte_random_tooltip(): string {\n    //source: https://www.safetydetectives.com/blog/malware-statistics/\n    const index = Math.floor(Math.random() * (9 - 1) + 1);\n    return tooltips[index];\n  }\n\n  ngOnInit(): void {}\n}\n","<button (click)=\"toggle_attacks()\">Attacks</button>\n\n<div *ngIf=\"show_attacks\">\n  <div *ngIf=\"!attack_active\">\n      <form [formGroup]='attack_select_form' (ngSubmit)='initiate_attack()'>\n        <h1>Choose your attack:</h1>\n\n        <select formControlName=\"attack\">\n            <option *ngFor=\"let attack of attack_options\">{{attack}}</option>\n        </select>\n\n        <input class='btn btn-success' type=\"submit\" value='Initiate'>\n      </form>\n  </div>\n\n  <div *ngIf=\"attack_active\">\n    <h1>{{current_attack.name}}</h1>\n\n    <i><p>{{current_attack.description}}</p></i>\n    <p>{{current_attack.percentage }}%</p>\n    <p>{{current_attack.start_time | date: 'short'}}</p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataStoreService } from 'src/app/services/data-store.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\ninterface Contract {\n  provider: string;\n  target: string;\n  created_on: Date;\n  expires_on: Date;\n}\n\n@Component({\n  selector: 'contracts-pane',\n  templateUrl: './contracts.component.html',\n  styleUrls: ['./contracts.component.sass']\n})\n\nexport class ContractsComponent implements OnInit {\n  tick_time: number = 1000;\n  event_timer: any;\n\n  contract_form: FormGroup;\n\n  available_contracts: Array<Contract>;\n  show_contracts: boolean = false;\n\n  constructor(private data_store: DataStoreService) {\n    this.contract_form = new FormGroup({\n      accepted: new FormControl(null, Validators.required)\n    });\n\n    this.event_timer = setInterval(() => {\n      this.cycle();\n    }, this.tick_time);\n  }\n  ngOnInit(): void {}\n\n  toggle_contracts(): void {\n    this.show_contracts = !this.show_contracts;\n  }\n\n  cycle(): void {\n    console.log('A cycle!');\n  }\n}\n","<button (click)=\"toggle_contracts()\">Contracts</button>\n\n<div *ngIf=\"show_contracts\">\n  <h1>Contracts!</h1>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DataStoreService } from 'src/app/services/data-store.service';\n\n@Component({\n  selector: 'info-hotbar',\n  templateUrl: './info-hotbar.component.html',\n  styleUrls: ['./info-hotbar.component.sass'],\n})\nexport class InfoHotbarComponent implements OnInit {\n  total_money: number;\n  total_bits: number;\n  total_detection: number;\n  total_detection_max: number;\n  total_detection_percentage: string;\n\n  event_timer: any;\n\n  constructor(private data_store: DataStoreService) {\n    this.total_money = data_store.fetch_money();\n    this.total_bits = data_store.fetch_bits();\n    this.total_detection = data_store.fetch_detection();\n    this.total_detection_max = data_store.fetch_detection_max();\n    this.total_detection_percentage = (\n      (this.total_detection / this.total_detection_max) *\n      100\n    ).toFixed(1);\n\n    this.event_timer = setInterval(() => {\n      this.total_money = data_store.fetch_money();\n      this.total_bits = data_store.fetch_bits();\n      this.total_detection = data_store.fetch_detection();\n      this.total_detection_max = data_store.fetch_detection_max();\n      this.total_detection_percentage = (\n        (this.total_detection / this.total_detection_max) *\n        100\n      ).toFixed(1);\n    }, 1000);\n  }\n\n  grind_bits(): void {\n    this.total_bits += 1;\n    this.data_store.store_bits(this.total_bits);\n  }\n\n  // grind_money(): void {\n  //   this.total_money += 1;\n  //   this.data_store.store_money(this.total_money);\n  // }\n\n  // grind_detection(): void {\n  //   this.total_detection += 1;\n  //   this.data_store.store_detection(this.total_detection);\n  // }\n\n  ngOnInit(): void {}\n}\n","<div id=\"hotbar\">\n  <p>${{ total_money | number }}</p>\n  <div id=\"bit-grinder\">\n    <p>{{ total_bits }} bits</p>\n    <button (click)=\"grind_bits()\">bits4clicks</button>\n  </div>\n  <p>{{ total_detection }} detection</p>\n</div>\n","// ng-bootstrap modal from https://ng-bootstrap.github.io/#/components/modal/examples\nimport { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { DataStoreService } from 'src/app/services/data-store.service';\n\nenum EffectType {\n  TODO = 'TODO',\n  lump = 'lump', // lump sum, such as +5000 bits\n  add = 'add', // additive, such as +50 bits per second\n  mult = 'mult', // multiplicative, such as 25% more bits from all sources = 1.25x\n  exp = 'exp', // exponential, such as gain 2% of your total bits every second\n}\n\nexport interface Skill {\n  name: string;\n  desc: string;\n  cost: number; // cost in terms of skil points\n  purchased: boolean; // whether the user has purchased the skill or not\n  effect: EffectType; // the type of effect: lump sum, additive, multiplicative, exponential\n  modifier: number; // the modifier for the skill's effect (e.g. 25% = 1.25)\n  tree: number; // \"infection\", \"wealth\", or \"stealth\"\n}\n\nexport interface SkillMod {\n  addMod: number; // additive, such as +50 bits per second\n  multMod: number; // multiplicative, such as 25% more bits from all sources = 1.25x\n  expMod: number; // exponential, such as gain 2% of your total bits every second\n}\n\n// interface PathMod {\n//   infection: SkillMod;\n//   wealth: SkillMod;\n//   stealth: SkillMod;\n// }\n\n@Component({\n  selector: 'skill-tree',\n  templateUrl: './skill-tree.component.html',\n  styleUrls: ['./skill-tree.component.sass'],\n})\nexport class SkillTreeComponent implements OnInit {\n  skillPoints: number; // user's number of skill points\n  skillId: string; // HTML id of a skill\n  canPurchase: boolean = false; // if user's # skill points >= skill cost, canPurchase = true\n  showTree: boolean = false; // toggle displaying the skill tree\n  // pathMod: PathMod = {\n  // };\n\n  // modifiers for each of the three skill trees (Infection, Wealth, and Stealth)\n  infectionMod: SkillMod = {\n    addMod: 0,\n    multMod: 1,\n    expMod: 1,\n  };\n  wealthMod: SkillMod = {\n    addMod: 0,\n    multMod: 1,\n    expMod: 1,\n  };\n  stealthMod: SkillMod = {\n    addMod: 0,\n    multMod: 1,\n    expMod: 1,\n  };\n\n  pathMods: SkillMod[] = [this.infectionMod, this.wealthMod, this.stealthMod];\n\n  // a Record of all skills in the skill tree\n  allSkills: Record<string, Skill> = {\n    'infection-1': {\n      name: 'Bit Accumulator',\n      desc: '+50 bits per second',\n      cost: 1,\n      purchased: false,\n      effect: EffectType.add,\n      modifier: 50,\n      tree: 0,\n    },\n    'infection-2': {\n      name: 'Bit Bundle',\n      desc: '+20,000 bits (one-time)',\n      cost: 1,\n      purchased: false,\n      effect: EffectType.lump,\n      modifier: 20000,\n      tree: 0,\n    },\n    'infection-3': {\n      name: 'Bit Miner',\n      desc: '+150 bits per second',\n      cost: 2,\n      purchased: false,\n      effect: EffectType.add,\n      modifier: 150,\n      tree: 0,\n    },\n    'infection-4': {\n      name: 'Bit Bonanza',\n      desc: '+75,000 bits (one-time)',\n      cost: 2,\n      purchased: false,\n      effect: EffectType.lump,\n      modifier: 75000,\n      tree: 0,\n    },\n    'infection-5': {\n      name: 'Bit Frenzy',\n      desc: '+100% bit gain',\n      cost: 3,\n      purchased: false,\n      effect: EffectType.mult,\n      modifier: 1,\n      tree: 0,\n    },\n    'infection-6': {\n      name: 'Bit Emperor',\n      desc: '+5% of your total bits per second',\n      cost: 5,\n      purchased: false,\n      effect: EffectType.exp,\n      modifier: 0.05,\n      tree: 0,\n    },\n    'wealth-1': {\n      name: 'Coin Collector',\n      desc: '+$5 per sec',\n      cost: 1,\n      purchased: false,\n      effect: EffectType.add,\n      modifier: 5,\n      tree: 1,\n    },\n    'wealth-2': {\n      name: 'Piggy Bank',\n      desc: '+1% of your total dollars per second',\n      cost: 1,\n      purchased: false,\n      effect: EffectType.exp,\n      modifier: 0.01,\n      tree: 1,\n    },\n    'wealth-3': {\n      name: 'Personal Loan',\n      desc: '+$18,000 (one-time)',\n      cost: 2,\n      purchased: false,\n      effect: EffectType.lump,\n      modifier: 18000,\n      tree: 1,\n    },\n    'wealth-4': {\n      name: 'Pure Profit',\n      desc: '+100% dollar gain',\n      cost: 2,\n      purchased: false,\n      effect: EffectType.mult,\n      modifier: 1,\n      tree: 1,\n    },\n    'wealth-5': {\n      name: 'Benjamins',\n      desc: '+$100 per second',\n      cost: 3,\n      purchased: false,\n      effect: EffectType.add,\n      modifier: 100,\n      tree: 1,\n    },\n    'wealth-6': {\n      name: 'Venture Capitalist',\n      desc: '+8% of your total dollars per second',\n      cost: 5,\n      purchased: false,\n      effect: EffectType.exp,\n      modifier: 0.08,\n      tree: 1,\n    },\n    'stealth-1': {\n      name: 'Cloak',\n      desc: '-25% detection',\n      cost: 1,\n      purchased: false,\n      effect: EffectType.mult,\n      modifier: 0.25,\n      tree: 2,\n    },\n    'stealth-2': {\n      name: 'Shroud',\n      desc: '+6 hours to detection buffer (permanently)',\n      cost: 1,\n      purchased: false,\n      effect: EffectType.add,\n      modifier: 0,\n      tree: 2,\n    },\n    'stealth-3': {\n      name: 'Disappear',\n      desc: 'Reset detection level to 0 (one-time)',\n      cost: 2,\n      purchased: false,\n      effect: EffectType.lump,\n      modifier: -9999,\n      tree: 2,\n    },\n    'stealth-4': {\n      name: 'Cover Your Tracks',\n      desc: '+12 hours to detection buffer (permanently)',\n      cost: 2,\n      purchased: false,\n      effect: EffectType.add,\n      modifier: 12,\n      tree: 2,\n    },\n    'stealth-5': {\n      name: 'Watchdog',\n      desc: '+24 hours to detection buffer (permanently)',\n      cost: 3,\n      purchased: false,\n      effect: EffectType.add,\n      modifier: 24,\n      tree: 2,\n    },\n    'stealth-6': {\n      name: 'Ghost',\n      desc: '-100% detection',\n      cost: 5,\n      purchased: false,\n      effect: EffectType.mult,\n      modifier: 1,\n      tree: 2,\n    },\n  };\n\n  event_timer: any;\n  tick_time: number = 1000;\n  points_event_timer: any;\n  points_tick_time: number = 30000;\n\n  //\n  constructor(\n    private modalService: NgbModal,\n    private data_store: DataStoreService\n  ) {\n    if (data_store.fetch_skills() != '') {\n      this.allSkills = JSON.parse(data_store.fetch_skills());\n    }\n    if (data_store.fetch_mods() != '') {\n      this.pathMods = JSON.parse(data_store.fetch_mods());\n    }\n    this.skillPoints = data_store.fetch_points();\n\n    this.event_timer = setInterval(() => {\n      let bits =\n        (data_store.fetch_bits() + 1 + this.pathMods[0].addMod) *\n        this.pathMods[0].multMod;\n      bits *= this.pathMods[0].expMod;\n      data_store.store_bits(bits);\n\n      let money =\n        (data_store.fetch_money() + 1 + this.pathMods[1].addMod) *\n        this.pathMods[1].multMod;\n      money *= this.pathMods[1].expMod;\n      data_store.store_money(money);\n\n      let detection =\n        (data_store.fetch_detection() + 1 + this.pathMods[2].addMod) *\n        this.pathMods[2].multMod;\n      detection *= this.pathMods[2].expMod;\n      data_store.store_detection(detection);\n      //data_store.store_attack_percentage(data_store.fetch_percentage();\n    }, this.tick_time);\n\n    this.points_event_timer = setInterval(() => {\n      data_store.store_points(data_store.fetch_points() + 1);\n    }, this.points_tick_time);\n  }\n\n  ngOnInit(): void {\n    this.setTooltips();\n    this.setSkillColors();\n  }\n\n  setSkillColors() {\n    for (let key in this.allSkills) {\n      let skill = this.allSkills[key];\n      let div = document.getElementById(key);\n      if (skill.purchased) {\n        if (skill.tree === 0) {\n          div.style.backgroundColor = 'maroon';\n        } else if (skill.tree === 1) {\n          div.style.backgroundColor = 'green';\n        } else {\n          div.style.backgroundColor = 'blue';\n        }\n      }\n    }\n  }\n\n  // set each skill'1 tooltip to include name and description\n  setTooltips() {\n    let skills = document.getElementsByClassName('skill');\n    for (var i = 0; i < skills.length; i++) {\n      skills[i].setAttribute(\n        'title',\n        this.allSkills[skills[i].id].name +\n          `: ` +\n          this.allSkills[skills[i].id].desc\n      );\n    }\n  }\n\n  // set user's modifiers based upon skills known\n  setModifiers(skill) {\n    if (skill.effect === 'add') {\n      this.pathMods[skill.tree].addMod += skill.modifier;\n    } else if (skill.effect === 'mult') {\n      this.pathMods[skill.tree].multMod += skill.modifier;\n    } else {\n      this.pathMods[skill.tree].expMod += skill.modifier;\n    }\n\n    this.data_store.store_mods(JSON.stringify(this.pathMods));\n  }\n\n  // payout lump sum skill effect (such as 'gain 20,000 bits (one-time)')\n  setLumpSum(skill) {\n    if (skill.tree === 0) {\n      // infection\n      this.data_store.store_bits(this.data_store.fetch_bits() + skill.modifier);\n    } else if (skill.tree === 1) {\n      // wealth\n      this.data_store.store_money(\n        this.data_store.fetch_money() + skill.modifier\n      );\n    } else {\n      // stealth\n      this.data_store.store_detection(\n        this.data_store.fetch_detection() + skill.modifier\n      );\n    }\n  }\n\n  // From: https://www.encodedna.com/angular/how-to-show-hide-or-toggle-elements-in-angular-4.htm\n  toggleDisplay() {\n    this.showTree = !this.showTree;\n    if (this.showTree) {\n      document.querySelector('#skill-tree-btn').innerHTML = 'Hide';\n      document.getElementById(\n        'skill-points'\n      ).innerText = this.skillPoints.toString();\n    } else {\n      document.querySelector('#skill-tree-btn').innerHTML = 'Skill Tree';\n    }\n  }\n\n  purchaseSkill() {\n    this.allSkills[this.skillId].purchased = true;\n    this.skillPoints -= this.allSkills[this.skillId].cost;\n    this.data_store.store_points(this.data_store.fetch_points());\n    document.getElementById('footer-skill-points').innerText =\n      'Skill points available: ' + this.skillPoints.toString();\n    document.getElementById(\n      'skill-points'\n    ).innerText = this.skillPoints.toString();\n    let currSkill = document.getElementById(this.skillId);\n    if (this.skillId.search('infect') > -1) {\n      currSkill.style.backgroundColor = 'maroon';\n    } else if (this.skillId.search('wealth') > -1) {\n      currSkill.style.backgroundColor = 'green';\n    } else {\n      currSkill.style.backgroundColor = 'blue';\n    }\n    this.modalService.dismissAll();\n    if (this.allSkills[this.skillId].effect != 'lump') {\n      this.setModifiers(this.allSkills[this.skillId]);\n    } else {\n      this.setLumpSum(this.allSkills[this.skillId]);\n    }\n\n    this.data_store.store_skills(JSON.stringify(this.allSkills));\n  }\n\n  resetMods() {\n    this.pathMods[0].addMod = 0;\n    this.pathMods[0].multMod = 1;\n    this.pathMods[0].expMod = 1;\n    this.pathMods[1].addMod = 0;\n    this.pathMods[1].multMod = 1;\n    this.pathMods[1].addMod = 1;\n\n    this.pathMods[2].addMod = 0;\n    this.pathMods[2].multMod = 1;\n    this.pathMods[2].expMod = 1;\n\n    this.data_store.store_mods(JSON.stringify(this.pathMods));\n  }\n\n  resetSkills() {\n    let refundedPoints = 0;\n\n    for (let key in this.allSkills) {\n      let currSkill = this.allSkills[key];\n      if (currSkill.purchased === true) {\n        currSkill.purchased = false;\n        refundedPoints += currSkill.cost;\n        document.getElementById(key).style.backgroundColor = 'transparent';\n      }\n    }\n\n    this.skillPoints += refundedPoints;\n    this.data_store.store_points(this.skillPoints);\n    document.getElementById(\n      'skill-points'\n    ).innerText = this.skillPoints.toString();\n    this.resetMods();\n    this.data_store.store_skills(JSON.stringify(this.allSkills));\n  }\n\n  // ng-bootstrap modal from https://ng-bootstrap.github.io/#/components/modal/examples\n  open(content, event) {\n    let selectedSkill = this.allSkills[event.target.id];\n    this.skillId = event.target.id;\n    this.modalService.open(content, { ariaLabelledBy: 'skill-name' });\n    document.getElementById('footer-skill-points').innerText =\n      'Skill points available: ' + this.skillPoints.toString();\n    document.getElementById('skill-name').innerText = selectedSkill.name;\n    document.getElementById('skill-desc').innerText = selectedSkill.desc;\n    if (selectedSkill.cost === 1) {\n      document.getElementById('skill-cost').innerText =\n        selectedSkill.cost.toString() + ' skill point';\n    } else {\n      document.getElementById('skill-cost').innerText =\n        selectedSkill.cost.toString() + ' skill points';\n    }\n\n    if (this.skillPoints >= selectedSkill.cost && !selectedSkill.purchased) {\n      this.canPurchase = true;\n      document.getElementById('footer-skill-points').style.color = 'black';\n    } else {\n      this.canPurchase = false;\n      document.getElementById('footer-skill-points').style.color = 'red';\n    }\n  }\n}\n","<button\n  type=\"button\"\n  class=\"btn btn-primary\"\n  id=\"skill-tree-btn\"\n  (click)=\"toggleDisplay()\"\n>\n  Skill Tree\n</button>\n\n<div [hidden]=\"!showTree\" id=\"skill-tree-grid\">\n  <div class=\"skill-points\" style=\"color: black;\">\n    Skill points available:\n    <span id=\"skill-points\"></span>\n    <button\n      class=\"btn btn-secondary btn-lg float-right\"\n      id=\"resetBtn\"\n      (click)=\"resetSkills()\"\n    >\n      Reset\n    </button>\n  </div>\n  <div class=\"grid-container\" id=\"path-infection\">\n    <div class=\"grid-item path-title\">Infection</div>\n    <div\n      class=\"grid-item skill skill-1\"\n      id=\"infection-1\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-2\"\n      id=\"infection-2\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-3\"\n      id=\"infection-3\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-4\"\n      id=\"infection-4\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-5\"\n      id=\"infection-5\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-6\"\n      id=\"infection-6\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n  </div>\n  <div class=\"grid-container\" id=\"path-wealth\">\n    <div class=\"grid-item path-title\">Wealth</div>\n    <div\n      class=\"grid-item skill skill-1\"\n      id=\"wealth-1\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-2\"\n      id=\"wealth-2\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-3\"\n      id=\"wealth-3\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-4\"\n      id=\"wealth-4\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-5\"\n      id=\"wealth-5\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-6\"\n      id=\"wealth-6\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n  </div>\n  <div class=\"grid-container\" id=\"path-stealth\">\n    <div class=\"grid-item path-title\">Stealth</div>\n    <div\n      class=\"grid-item skill skill-1\"\n      id=\"stealth-1\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-2\"\n      id=\"stealth-2\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-3\"\n      id=\"stealth-3\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-4\"\n      id=\"stealth-4\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-5\"\n      id=\"stealth-5\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n    <div\n      class=\"grid-item skill skill-6\"\n      id=\"stealth-6\"\n      (click)=\"open(content, $event)\"\n      data-toggle=\"tooltip\"\n      title=\"\"\n    ></div>\n  </div>\n  <br />\n  <br />\n\n  <!-- ng-bootstrap modal from https://ng-bootstrap.github.io/#/components/modal/examples -->\n  <ng-template #content let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"skill-name\"></h4>\n      <button\n        type=\"button\"\n        class=\"close\"\n        aria-label=\"Close\"\n        (click)=\"modal.dismiss()\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <p id=\"skill-desc\"></p>\n      <p id=\"skill-cost\"></p>\n    </div>\n    <div class=\"modal-footer\">\n      <p class=\"mr-auto\" id=\"footer-skill-points\"></p>\n      <button\n        class=\"btn btn-outline-danger\"\n        id=\"cancelBtn\"\n        (click)=\"modal.dismiss()\"\n      >\n        Cancel\n      </button>\n      <button\n        *ngIf=\"!canPurchase\"\n        disabled\n        class=\"btn btn-outline-secondary\"\n        id=\"purchaseBtn\"\n        tooltip=\"Insufficient skill points\"\n      >\n        Purchase\n      </button>\n      <button\n        *ngIf=\"canPurchase\"\n        class=\"btn btn-outline-primary\"\n        id=\"purchaseBtn\"\n        (click)=\"purchaseSkill()\"\n      >\n        Purchase\n      </button>\n    </div>\n  </ng-template>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport {\n  Skill,\n  SkillMod,\n} from 'src/app/components/skill-tree/skill-tree.component';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DataStoreService {\n  constructor(private cookie_service: CookieService) {\n    // this.cookie_service.set('global_bits', '0', 99999);\n    // this.cookie_service.set('global_money', '0', 99999);\n    // this.cookie_service.set('global_detection', '0', 99999);\n    // this.cookie_service.set('global_detection_max', '86400', 99999);\n    // this.cookie_service.set('global_skills', '', 99999);\n    // this.cookie_service.set('global_mods', '', 99999);\n    // this.cookie_service.set('attack_percentage', '0', 99999);\n  }\n\n  store_bits(bits: number): void {\n    this.cookie_service.set('global_bits', bits.toString(), 99999);\n  }\n\n  fetch_bits(): number {\n    const global_bits = this.cookie_service.get('global_bits');\n    if (global_bits === '') {\n      return 0;\n    } else {\n      return parseInt(global_bits);\n    }\n  }\n\n  store_attack_percentage(percentage: number): void {\n    this.cookie_service.set('attack_percentage', percentage.toString(), 99999);\n  }\n\n  store_money(money: number) {\n    this.cookie_service.set('global_money', money.toString(), 99999);\n  }\n\n  fetch_money(): number {\n    const global_money = this.cookie_service.get('global_money');\n    if (global_money === '') {\n      return 0;\n    } else {\n      return parseInt(global_money);\n    }\n  }\n\n  store_detection(detection: number) {\n    this.cookie_service.set('global_detection', detection.toString(), 99999);\n  }\n\n  fetch_detection(): number {\n    const global_detection = this.cookie_service.get('global_detection');\n    if (global_detection === '') {\n      return 0;\n    } else {\n      return parseInt(global_detection);\n    }\n  }\n\n  store_detection_max(detection_max: number) {\n    this.cookie_service.set(\n      'global_detection_max',\n      detection_max.toString(),\n      99999\n    );\n  }\n\n  fetch_detection_max(): number {\n    const global_detection_max = this.cookie_service.get(\n      'global_detection_max'\n    );\n    if (global_detection_max === '') {\n      return 0;\n    } else {\n      return parseInt(global_detection_max);\n    }\n  }\n\n  store_skills(skillsJSON: string) {\n    this.cookie_service.set('global_skills', skillsJSON, 99999);\n  }\n\n  fetch_skills(): string {\n    return this.cookie_service.get('global_skills');\n  }\n\n  store_mods(modsJSON: string) {\n    this.cookie_service.set('global_mods', modsJSON, 99999);\n  }\n\n  fetch_mods(): string {\n    return this.cookie_service.get('global_mods');\n  }\n  fetch_percentage(): number {\n    const global_percengae = this.cookie_service.get('attack_percentage');\n    if (global_percengae === '') {\n      return 0;\n    } else {\n      return parseInt(global_percengae);\n    }\n  }\n\n  store_points(points: number) {\n    this.cookie_service.set('global_points', points.toString());\n  }\n\n  fetch_points(): number {\n    const global_points = this.cookie_service.get('global_points');\n    if (global_points === '') {\n      return 2;\n    } else {\n      return parseInt(global_points);\n    }\n  }\n}\n","export const attacks = {\n  \"Artemis attack\": \"1\",\n  \"BAT.Drop attack\": \"2\",\n  \"Coll.CozyBear attack\": \"3\",\n  \"Dyre attack\": \"4\",\n  \"EquationGroup.EquationLaser\": \"5\",\n  \"Friday_the_13th.408\": \"6\",\n  \"Green_Caterpillar.1575.A\": \"7\",\n  \"Test_attack_1_min\": \"8\",\n  \"Test_attack_3_min\": \"9\"\n}\n","export const tooltips = [\n  \"Over 70% of US Americans are worried about having their personal data stolen from their computers and online networks.\",\n  \"January 2019 saw the release of nearly two billion hacked records 1,769,185,063 to be precise.\",\n  \"As much as 38% of malware is now being disguised as a Word document.\",\n  \"In 2018, the cost of the average data breach increased by 6.4% to $3.86 million dollars per breach.\",\n  \"In 2020, it is estimated that organizations and individuals collectively will pay $11.5 billion, either as a cost of remediating ransomware damage or simply as a cost or paying a ransom.\",\n  \"Since 2015, the ecenomic toll of cybercrime has grown fourfold to $2 trillion USD.\",\n  \"Cryptojacking malware steals your CPU cycles to mine cryptocurrency, and it's some of the fastest growing malware out there, with 8 million attempts per month at the beginning of 2018.\",\n  \"About 24,000 malicious apps are blocked every day - a volume that virutally guarantees at least a few malicious apps are getting through.\",\n  \"A survey of over 4,000 organizations shows that over 70% are unprepared to face down even the most basic attempt at a security breach.\",\n]\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}